openapi: 3.0.3
info: 
  title: Credit conveyor
  description: Calculation of possible loan terms, scoring the borrower and full calculation of loan parameters
  version: 1.0.0
  contact: 
    name: Zentsova Anastasiia
    email: pestovnikovaanastasiia@gmail.com
servers:
  - url: http://localhost:8080/conveyor/
    description: Development server
paths:
  /offers:
    post:
      summary: Calculation of possible loan offers
      tags: 
        - LoanOffers
      operationId: getAllPossibleOffers
      requestBody:
        required: true
        content:
          application/json: 
            schema: 
              $ref: "#/components/schemas/LoanApplicationRequestDTO"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoanOfferDTOs"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components: 
  schemas:
    LoanOfferDTO:
      type: object
      properties:
        applicationId: 
          type: integer
          format: int64
          example: 1
        requestedAmount:
          type: number
          format: double
          example: 1700000.00
        totalAmount:
          type: number
          format: double
          example: 3000000.00
        term:
          type: integer
          format: int32
          example: 180
        monthlyPayment:
          type: number
          format: double
          example: 190000
        rate:
          type: number
          format: double
          example: 10.4
        isInsuranceEnabled:
          type: boolean
          example: false
        isSalaryClient:
          type: boolean
          example: true
    LoanOfferDTOs:
      type: array
      items:
        $ref: "#/components/schemas/LoanOfferDTO"
    LoanApplicationRequestDTO:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 1700000.00
        term:
          type: integer
          format: int32
          example: 180
        firstName:
          type: string
          example: Ivan
        lastName:
          type: string
          example: Ivanov
        middleName:
          type: string
          example: Ivanovich
        email:
          type: string
          example: ivanii@google.com
        birthDate:
          type: string
          format: date
          example: 1991-01-01
        passportSeries:
          type: string
          example: 8610
        passportNumber:
          type: string
          example: 211009
    Error:
      type: object
      required:
        code:
          type: integer
          format: int32
        message:
          type: string